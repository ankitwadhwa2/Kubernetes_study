#Command to check in pod
kubectl -n elastic-stack exec -it app cat /log/app.log

Application Maintainance
--------------------------
Rollout and Rollbacks

Rolling update
Recreate Update

kubectl create -f deploymentfile.yml

kubectl get deployments

kubectl apply -f deploymentfile.yml

#set image - in this case depplyment file is not updated
kubectl set image deployment/my-app-deployment nginx1.19.1

kubectl rollout status deployment/my-app-deployment

kubectl rollout history  deployment/my-app-deployment

kubectl rollout undo deployment/my-app-deployment

controlplane $ cat curl-test.sh 
for i in {1..35}; do
   kubectl exec --namespace=kube-public curl -- sh -c 'test=`wget -qO- -T 2  http://webapp-service.default.svc.cluster.local:8080/info 2>&1` && echo "$test OK" || echo "Failed"';
   echo ""
donecontrolplane $ 

------------------------------

Configure Application Commands
------------------------------

controlplane $ cat Dockerfile
FROM python:3.6-alpine

RUN pip install flask

COPY . /opt/

EXPOSE 8080

WORKDIR /opt

ENTRYPOINT ["python", "app.py"]controlplane $ 

----------------------------------

controlplane $ cat Dockerfile2 
FROM python:3.6-alpine

RUN pip install flask

COPY . /opt/

EXPOSE 8080

WORKDIR /opt

ENTRYPOINT ["python", "app.py"]

CMD ["--color", "red"]controlplane $ cat webapp-color-pod.yaml 
apiVersion: v1
kind: Pod
metadata:
  name: webapp-green
  labels:
      name: webapp-green
spec:
  containers:
  - name: simple-webapp
    image: kodekloud/webapp-color
    command: ["--color","green"]controlplane $ 

/////////////////////////////////////////////////////

Config maps

to set environment varibales using env or envFrom


CLUSTER MAINTAINANCE
#####################
Node based
----------
kubectl drain node
kubectl cordon node
kubectl uncordon node


kubectl drain node01 --ignore-daemonsets


-------------------------

CLUSTER UPGRADE
############
Lates 3 version are being supported by K8S

kubectl upgrade plan
kubectl upgrade apply

Master goes down does not mean worker will down
Upgrade nodes one by one
Kubeadm does not upgrade kubelet
Upgrade version of kubeadm first then cluster

apt-get update -y kubeadm=1.12.01
kubeadm upgrade apply v1.12.01
### It shows version of kubelets on each node, not the version of api server

Then update kubelet on master

-----------------------------------
CLUSTER
BACKUP and RESTORE
###################

Resource Configuration(or use some tools)
kubectl get all --all-namespaces -o yaml > file.yml

ETCD cluster

in etcd we define where all the resources will be created

take snapshot of etcd cluster and recreate when required
kubectl logs etcd-controlplane -n kube-system or check the ETCD pod kubectl describe pod etcd-controlplane -n kube-system


ETCDCTL_API=3 etcdctl  --data-dir /var/lib/etcd-from-backup snapshot restore /opt/snapshot-pre-boot.db


