export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}')
echo NODE_PORT=$NODE_PORT

kubectl expose deployment/kubernetes-bootcamp --type="NodePort" --port 8080

kubectl expose pod nginx --port=80 --name nginx-service --type=NodePort --dry-run=client -o yaml

Taints & Tolerations
------------------------
kubectl taint nodes node01 spray=mortein:NoSchedule

ontrolplane $ cat /var/answers/bee.yaml
apiVersion: v1
kind: Pod
metadata:
  name: bee
spec:
  containers:
  - image: nginx
    name: bee
  tolerations:
  - key: spray
    value: mortein
    effect: NoSchedule
	
	
	
	# Remove taint from node01, use minus sign at last
	kubectl taint node controlplane node-role.kubernetes.io/master:NoSchedule-
--------------------------------------------

Node Selector
-----------------

To create a pod definition
apiVersion: v1
kind: Pod
metadata:
 name: myapp-pod
spec:
 containers:
 - name: data-processor
   image: data-processor
 nodeSelector:
  size: Large
$ kubectl create -f pod-definition.yml

o label nodes

Syntax

$ kubectl label nodes <node-name> <label-key>=<label-value>
Example

$ kubectl label nodes node-1 size=Large

Node Affinity
---------------

apiVersion: v1
kind: Pod
metadata:
 name: myapp-pod
spec:
 containers:
 - name: data-processor
   image: data-processor
 affinity:
   nodeAffinity:
     requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: size
            operator: In
            values: 
            - Large
            - Medium
			
			
--------------------------------------

######################################
Resource requirements and Limits
--------------
Set limits to namespace first 

apiVersion: v1
kind: LimitRange
metadata:
  name: mem-limit-range
spec:
  limits:
  - default:
      memory: 512Mi
    defaultRequest:
      memory: 256Mi
    type: Container
	
	
Then set request and limits in pod definition
-------------------------
apiVersion: v1
kind: Pod
metadata:
  name: simple-webapp-color
  labels:
    name: simple-webapp-color
spec:
 containers:
 - name: simple-webapp-color
   image: simple-webapp-color
   ports:
    - containerPort:  8080
   resources:
     requests:
      memory: "1Gi"
      cpu: "1"
     limits:
       memory: "2Gi"
       cpu: "2"
